[tool.poetry]
name = "glpi-dashboard-refactor"
version = "0.1.0"
description = "Arquitetura refatorada do GLPI Dashboard seguindo clean architecture e contratos documentados."
license = "MIT"
readme = "README.md"
packages = [
    { include = "glpi_dashboard_shared", from = "packages/shared/src" },
    { include = "glpi_dashboard_glpi_contracts", from = "packages/glpi_contracts/src" },
    { include = "glpi_dashboard_core_domain", from = "packages/core_domain/src" },
    { include = "glpi_dashboard_data_pipeline", from = "packages/data_pipeline/src" },
    { include = "glpi_dashboard_api", from = "apps/api/src" },
    { include = "glpi_dashboard_worker_ingestion", from = "apps/worker_ingestion/src" }
]

authors = ["Time GLPI Dashboard <arquitetura@glpi-dashboard.dev>"]

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.115.0"
httpx = { version = "^0.27.0", extras = ["http2"] }
pydantic = "^2.9.0"
pydantic-settings = "^2.4.0"
python-dateutil = "^2.9.0.post0"
structlog = "^24.1.0"
strawberry-graphql = "^0.282.0"
prometheus-client = "^0.20.0"
uvicorn = { version = "^0.30.0", extras = ["standard"] }
redis = "^5.1.0"
asyncpg = "^0.29.0"
SQLAlchemy = "^2.0.32"

[tool.poetry.group.worker.dependencies]
anyio = "^4.4.0"
respx = "^0.20.2"

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.2"
pytest-asyncio = "^0.23.8"
pytest-cov = "^5.0.0"
hypothesis = "^6.112.2"
ruff = "^0.6.5"
mypy = "^1.11.2"
types-requests = "^2.32.0.20240914"
types-python-dateutil = "^2.9.0.20240821"
pre-commit = "^3.8.0"
mutmut = "^3.1.0"

[tool.poetry.group.contract.dependencies]
pact-python = "^2.2.0"

[tool.poetry.scripts]
ingest-glpi = "glpi_dashboard_worker_ingestion.main:run"
serve-api = "glpi_dashboard_api.main:run"

[build-system]
requires = ["poetry-core>=1.8.0"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 100
extend-select = ["B", "C4", "N", "RUF100"]
ignore = ["B008"]

[tool.ruff.lint.per-file-ignores]
"tests/**" = ["S101"]

[tool.mypy]
python_version = "3.11"
strict = true
warn_unused_configs = true
namespace_packages = true
explicit_package_bases = true
mypy_path = [
    "packages/shared/src",
    "packages/glpi_contracts/src",
    "packages/core_domain/src",
    "packages/data_pipeline/src",
    "apps/api/src",
    "apps/worker_ingestion/src"
]
plugins = []

[tool.pytest.ini_options]
addopts = "-ra --strict-markers --cov=glpi_dashboard_core_domain --cov=glpi_dashboard_data_pipeline --cov-report=term-missing"
testpaths = ["tests"]
asyncio_mode = "auto"
markers = [
    "contract: testes de contrato com GLPI",
    "integration: testes de integração do pipeline",
    "unit: testes unitários do domínio"
]
