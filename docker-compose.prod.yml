version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: glpi_dashboard_mysql_prod
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: glpi_dashboard
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./backend/database/init:/docker-entrypoint-initdb.d
    networks:
      - glpi_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: glpi_dashboard_redis_prod
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - glpi_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    command: redis-server --requirepass ${REDIS_PASSWORD}

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: glpi_dashboard_backend_prod
    environment:
      - FLASK_APP=backend/app.py
      - FLASK_ENV=production
      - FLASK_DEBUG=false
      - DATABASE_URL=mysql+pymysql://${MYSQL_USER}:${MYSQL_PASSWORD}@mysql:3306/glpi_dashboard
      - REDIS_URL=redis://:${REDIS_PASSWORD}@redis:6379/0
      - SECRET_KEY=${SECRET_KEY}
      - USE_MOCK_DATA=false
      - GLPI_URL=${GLPI_URL}
      - GLPI_APP_TOKEN=${GLPI_APP_TOKEN}
      - GLPI_USER_TOKEN=${GLPI_USER_TOKEN}
      - RATE_LIMIT_PER_MINUTE=60
      - ALERT_RESPONSE_TIME_THRESHOLD=300
      - ALERT_ERROR_RATE_THRESHOLD=0.05
    ports:
      - "5000:5000"
    volumes:
      - backend_logs:/app/logs
    networks:
      - glpi_network
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    command: >
      sh -c "gunicorn --config gunicorn_config.py app:app"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    container_name: glpi_dashboard_frontend_prod
    environment:
      - NODE_ENV=production
      - VITE_API_BASE_URL=http://backend:5000/api
    networks:
      - glpi_network
    depends_on:
      - backend
    restart: unless-stopped

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: glpi_dashboard_nginx_prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.prod.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    networks:
      - glpi_network
    depends_on:
      - frontend
      - backend
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local
  backend_logs:
    driver: local

networks:
  glpi_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16